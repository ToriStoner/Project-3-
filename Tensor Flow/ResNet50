import tensorflow as tf
from tensorflow.keras.applications import ResNet50
from tensorflow.keras.layers import Dense, GlobalAveragePooling2D
from tensorflow.keras.models import Model

# Number of classes (26 letters of ASL)
num_classes = 26

# Load the pre-trained ResNet50 model without the top layer
base_model = ResNet50(weights='imagenet', include_top=False)

# Add custom layers on top of the base model
x = base_model.output
x = GlobalAveragePooling2D()(x)  # This reduces the spatial dimensions to a single vector
x = Dense(1024, activation='relu')(x)  # A dense layer with 1024 units
predictions = Dense(num_classes, activation='softmax')(x)  # 26 output units for ASL letters

# Create the final model
model = Model(inputs=base_model.input, outputs=predictions)

# Freeze the layers of ResNet50 so that only the custom layers are trained
for layer in base_model.layers:
    layer.trainable = False

# Compile the model
model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

# Print the model summary to check the architecture
model.summary()

# Train the model with your dataset
model.fit(train_data, train_labels, epochs=10)
